name: Build and Test

on:  [ push, pull_request ]

env:
  external_version: 1.66.0
  external_name: boost_1_66_0
  external_path: ~/Boost

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python: [ python, python3 ]
        cxx: [ g++, clang ]
        std: [ c++98, c++11]

    steps:
    - uses: actions/checkout@v2

    - name: Cache Boost Version
      id: cache-boost
      uses: actions/cache@v2
      env:
        cache-name: external-boost

      with:
        path: ${{ env.external_path }}
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.external_version}}

    - name: Boost Prerequisites
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        wget -nv https://sourceforge.net/projects/boost/files/boost/${{ env.external_version }}/${{ env.external_name}}.tar.gz/download
        tar xf download
        pushd ${{ env.external_name }}
        ./bootstrap.sh
        ./b2 tools/bcp
        mkdir -p ${{ env.external_path }}
        dist/bin/bcp python tools/boostbook tools/quickbook ${{ env.external_path }} &> /dev/null
        popd

    - name: Clear Boost Python
      run: rm -rf ${{ env.external_path }}/boost/python

    - name: OS Prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          gcc \
          g++ \
          clang \
          python3-pip \
          python3-numpy \
          python3-dev \
          python3-wheel \
          python-numpy \
          python-dev \
          libboost-all-dev \
          xsltproc \
          docbook-xsl \
          python-sphinx \
          python-docutils

    - name: Faber Install
      run: |
        python3 -m pip install setuptools
        python3 -m pip install faber
        python3 -m faber -v

    - name: Test
      run: |
        ${{ matrix.python }} --version
        python3 -m faber -v
        ls -l ${{ env.external_path }}

        sed -e "s/${{ matrix.python }}/$PYTHON/g" .ci/faber > ~/.faber
        
        python3 -m faber \
          --with-boost-include=${{ env.external_path }} \
          --builddir=build test.report \
          cxx.name=${{ matrix.cxx }} \
          cxxflags=-std=${{ matrix.std }} \
          -j8
